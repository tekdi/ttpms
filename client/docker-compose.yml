# TPPMS React Frontend - Environment-Driven Docker Compose
# Supports development and production modes via DEPLOY_ENV variable

services:
  tppms-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${DEPLOY_TARGET:-production}
      args:
        # Pass all environment variables as build args for Vite
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
        VITE_GOOGLE_CLIENT_ID: ${VITE_GOOGLE_CLIENT_ID}
        VITE_APP_NAME: ${VITE_APP_NAME}
        VITE_APP_DESCRIPTION: ${VITE_APP_DESCRIPTION}
        VITE_APP_VERSION: ${VITE_APP_VERSION}
        VITE_DEBUG_MODE: ${VITE_DEBUG_MODE}
        VITE_ENABLE_CONSOLE_LOGS: ${VITE_ENABLE_CONSOLE_LOGS}
        VITE_API_TIMEOUT: ${VITE_API_TIMEOUT}
        VITE_SESSION_TIMEOUT: ${VITE_SESSION_TIMEOUT}
        VITE_ENABLE_GOOGLE_AUTH: ${VITE_ENABLE_GOOGLE_AUTH}
        VITE_ENABLE_BENCH_SUMMARY: ${VITE_ENABLE_BENCH_SUMMARY}
        VITE_ENABLE_ALLOCATION_MODAL: ${VITE_ENABLE_ALLOCATION_MODAL}
        VITE_ITEMS_PER_PAGE: ${VITE_ITEMS_PER_PAGE}
        VITE_MAX_UPLOAD_SIZE: ${VITE_MAX_UPLOAD_SIZE}
    container_name: ${CONTAINER_NAME:-tppms-frontend}
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-3000}:${INTERNAL_PORT:-80}"
    networks:
      - tppms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tppms-frontend.rule=Host(`${FRONTEND_HOST:-localhost}`)"
      - "traefik.http.routers.tppms-frontend.entrypoints=web"
      - "traefik.http.services.tppms-frontend.loadbalancer.server.port=80"

  # Development mode (uncomment to use)
  # tppms-frontend-dev:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   container_name: tppms-frontend-dev
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   environment:
  #     - VITE_API_BASE_URL=http://localhost:8000/api
  #     - VITE_DEBUG_MODE=true
  #     - VITE_ENABLE_CONSOLE_LOGS=true
  #   networks:
  #     - tppms-network

networks:
  tppms-network:
    driver: bridge
    name: tppms-network

# Optional: If you want to include the backend in the same compose file
# volumes:
#   postgres_data:

# services:
#   tppms-backend:
#     image: tppms-backend:latest
#     container_name: tppms-backend
#     ports:
#       - "8000:8000"
#     environment:
#       - DATABASE_URL=postgresql://tppms_user:password@postgres:5432/tppms
#     depends_on:
#       - postgres
#     networks:
#       - tppms-network
# 
#   postgres:
#     image: postgres:15-alpine
#     container_name: tppms-postgres
#     environment:
#       POSTGRES_DB: tppms
#       POSTGRES_USER: tppms_user
#       POSTGRES_PASSWORD: password
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     networks:
#       - tppms-network
